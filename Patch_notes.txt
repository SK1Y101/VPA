0.1.60: -The "we haven't added enough to warrant a new minor version but we've gotten bored of writing the number 5" Update.
added a few mini features to _core in preperation for a new update.
started work on adding the remaining Updater functions that weren't available previously.
Fixed the replace_function function so that the function replace functions.
Began to look into getting the replace_function to replace functions in the main VPA program.
Added a function to clear pip installs.

0.1.55:
Small Optimisation Fixes.
Fixed some more errors raised by Updater. Hopefully theese will be the last problems to arise.
Slightly modified the _core.help module to not display different functions that perform the same purpose.

0.1.54:
Fixed many of the issues that escaped us in 0.1.53.
Fixed some of the problems from trying to fix the problems in 0.1.53.
Began some light work on the updater to do with modular differentiation. Nothing too big, else there will be more errors.
Bagan a new VPA Patch to stop the patch notes fpr 0.1.53 being too long.
Fixed some errors ascociated with bad zipfile handling.

0.1.53:	-The "Let's fix all of the Bugs we introduced in the previous three updates!" update-
Contiued to add functionality to the updater.
Fixed an isse with updater not being able to show previous versions of modules.
Fixed an issue where the updater would constantly ping the module database.
Fixed several runtime errors with the updater, namely those caused when downloading a zip archive.
Modified module.modversion to allow it to load modules that have an equivalent patch version as the currently running VPA.
Fixed problems that arose when trying to update VPA.
Fixed some issues where the program attempted to check local versions of modules that didnt exist yet.
Log now actually shows all of the usefull data to debug the program.

0.1.52:
Fixed most of the errors that escaped undetected from 0.1.51
Added some small adjustments to Updater.py
added module.dont_overwrite to allow users to manintain data across versions and updates.
New functionalities being added into Updater.py
Small adjustments to modules and _core to account for the new Updater.py update

0.1.51:
Fixed a load of bugs with the new updater program. It should now ~work as expected.
Not a lot else, ^ that took a lot of time and effort.
very slight adjustments to _core, nothing particularly noticeable (modified _core.modules to work with the updater)

0.1.50: -The big Updater Update-
Updater program supplied with program to allow automatic instalation and updating of software.
Custom modules will now be able to call other modules as dependencies.
All modules must now state their version, in order to be compatible with the updater.
Modules added to updater repository to allow them to be installed by the updater.
Multiple copies of the program can exist on one machine, and can be launched from the updater.
Updater Logs data to the log.
Program versions now hosted on Dropbox: https://www.dropbox.com/sh/yucoglcwxirfkoq/AAATgGPh961ept6AHtWN8CyFa?dl=0
Users can now install and run older versions, either from the dropbox, or from the updater.
Opened Custom module creation to people outside of the development team.
UI under development, prototype in use for the updater.
Some minor tweaks to program to allow compatability with new software.
Minor optimisation fixes.

0.1.41:
Reminders module complete and integrated into program.
fixed small bug with _core.module overwriting previous functions.
slight modifications to _core.
optimisation of reminders module.

0.1.40:
Reminders module to be bundeled with next update.
_core.module now allows custom functions to replace previous functions functionality.
revisitation of loading function for smoother and less buggy load.
Log shows time elapsed between importing modules and startup.
Patch notes now bundeled with program (as opposed to developers only)
Optimisation.

0.1.31:
Queries module now bundeled with Program.
Load time reduced to 20 seconds at most.
Program should now log important details.

0.1.30:
Program will now download any missing dependancies for default python modules.
Fixed ongoing issue with porgram not importing commands from modules.
Minor bug fixes.
Optimisation.

0.1.23:
Fixed An issue with import order that caused core modules to be loaded in incorrect orders.
Added in python module checks to stop program running if the modules aren't installed.
Created guide for adding custom modules.
Cleaned up redundant code.

0.1.20:
Added ability for program to load custom modules.
Added settings module to allow for global variables.
Added command reading from modules into program.
Fixed error which prevented program from loading.

0.1.00:
Program is now modular.
Expanded development team to include Luke Skinner.
Filesize reduced Dramatically
Experimental features (dictation, text-to-speech, solve math) removed.
First alpha released with the expanded development team.
Optimisation.

0.0.3:
Initial development restarted.
Program is now not one huge chunk of code.
Program can actually do stuff and is somewhat readable.
Really buggy stuff that basically never worked renamed to "experimental features".

0.0.2:
Program now backs itself up.
Program restores itself if tampered with without development passcode inputted.
Data moved to textfile to allow storage on a multi-time use.

0.0.1:
Initial creation.
Barebones framework.
Development name LOaBIS created. (Local Operations and Basic Intelligence System)

0.0.05:
Program can read files.
Program can save files.
Program can rename files.
(Literally nothing in this thing)